<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project on Areté</title>
    <link>https://ivanioi.github.io/tags/project/</link>
    <description>Recent content in Project on Areté</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2025 Areté</copyright>
    <atom:link href="https://ivanioi.github.io/tags/project/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Electricity</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part3-physics/electricity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part3-physics/electricity/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;电力是如何工作的？ 
    &lt;div id=&#34;%E7%94%B5%E5%8A%9B%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E7%94%B5%E5%8A%9B%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;mc979OhitAg&#34; playlabel=&#34;mc979OhitAg&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;



&lt;h2 class=&#34;relative group&#34;&gt;电压是如何工作的？ 
    &lt;div id=&#34;%E7%94%B5%E5%8E%8B%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E7%94%B5%E5%8E%8B%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;w82aSjLuD_8&#34; playlabel=&#34;w82aSjLuD_8&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;



&lt;h2 class=&#34;relative group&#34;&gt;电流是如何工作的？ 
    &lt;div id=&#34;%E7%94%B5%E6%B5%81%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E7%94%B5%E6%B5%81%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;kcL2_D33k3o&#34; playlabel=&#34;kcL2_D33k3o&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;



&lt;h2 class=&#34;relative group&#34;&gt;交流电是如何工作的？ 
    &lt;div id=&#34;%E4%BA%A4%E6%B5%81%E7%94%B5%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E4%BA%A4%E6%B5%81%E7%94%B5%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;4oRT7PoXSS0&#34; playlabel=&#34;4oRT7PoXSS0&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;

&lt;lite-youtube videoid=&#34;iIqhAX0I7lI&#34; playlabel=&#34;iIqhAX0I7lI&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;



&lt;h2 class=&#34;relative group&#34;&gt;电容器是如何工作的？ 
    &lt;div id=&#34;%E7%94%B5%E5%AE%B9%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E7%94%B5%E5%AE%B9%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;X4EUwTwZ110&#34; playlabel=&#34;X4EUwTwZ110&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;</description>
      
    </item>
    
    <item>
      <title>布尔代数</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part6-logic/boolean-algebra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part6-logic/boolean-algebra/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;What is Boolean Algebra 
    &lt;div id=&#34;what-is-boolean-algebra&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#what-is-boolean-algebra&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;什么是布尔代数？我们知道初等代数是什么，比如 &lt;code&gt;y = 3x + 1, y = 3x^2 + 2x + 3&lt;/code&gt; 它们往往都可以在一个 2 维坐标中转变为一个对应的图形。比如 &lt;code&gt;y = x^2 -x - 2&lt;/code&gt; 对应如下图形:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>电路类型</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part5-circuits/circuit-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part5-circuits/circuit-type/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;组合电路 
    &lt;div id=&#34;%E7%BB%84%E5%90%88%E7%94%B5%E8%B7%AF&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E7%BB%84%E5%90%88%E7%94%B5%E8%B7%AF&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;组合电路的特点是，不存储任何信息，其输出完全依赖于当前的输入.&lt;/p&gt;


&lt;h2 class=&#34;relative group&#34;&gt;时序电路 
    &lt;div id=&#34;%E6%97%B6%E5%BA%8F%E7%94%B5%E8%B7%AF&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E6%97%B6%E5%BA%8F%E7%94%B5%E8%B7%AF&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;时序电路的特点是，其可以存储信息，其输出不仅仅依赖于当前的输入，还依赖于之前的输入.&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>图灵机是什么？</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part2-turing/turing-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part2-turing/turing-machine/</guid>
      <description>&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900&#34;
  &gt;

  &lt;span
    
      class=&#34;text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      class=&#34;dark:text-neutral-300&#34;
    &gt;&lt;p&gt;图灵在他的&lt;strong&gt;论可计算数及其在判定性问题上的应用&lt;/strong&gt;论文中，通过创建了名叫图灵机的抽象机器，来辅助解决可判定性问题。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>项目介绍</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part1-intro/info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part1-intro/info/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;这个项目要干什么? 
    &lt;div id=&#34;%E8%BF%99%E4%B8%AA%E9%A1%B9%E7%9B%AE%E8%A6%81%E5%B9%B2%E4%BB%80%E4%B9%88&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E8%BF%99%E4%B8%AA%E9%A1%B9%E7%9B%AE%E8%A6%81%E5%B9%B2%E4%BB%80%E4%B9%88&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我感到非常无聊，让我们在计算机中找点乐子吧。我承认目前我只是一个擅长 CRUD 的码农，这也勾起了我对它的兴趣，让我更想知道它能给我带来什么样子的体验!&lt;/p&gt;
&lt;p&gt;所以, 我的目标是在学习，开发过程中，主要根据课程，书籍，等一切资源搭建起操作系统各个关键组件, 比如计算机本身(虚拟化)，操作系统，网络堆栈，编译器，数据库，GUI Desktop&amp;hellip;&amp;hellip;&lt;/p&gt;


&lt;h2 class=&#34;relative group&#34;&gt;如何实现? 
    &lt;div id=&#34;%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我为什么认为这个项目是可以实现的？一个 CRUD 仔如何实现这一切？&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>真空管</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part4-device/vacuum-tubes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part4-device/vacuum-tubes/</guid>
      <description>&lt;lite-youtube videoid=&#34;kRSiTog2-No&#34; playlabel=&#34;kRSiTog2-No&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;</description>
      
    </item>
    
    <item>
      <title>半导体</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part4-device/semiconductor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part4-device/semiconductor/</guid>
      <description>&lt;lite-youtube videoid=&#34;Fwj_d3uO5g8&#34; playlabel=&#34;Fwj_d3uO5g8&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;</description>
      
    </item>
    
    <item>
      <title>记忆电路</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part5-circuits/storage-circuit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part5-circuits/storage-circuit/</guid>
      <description>&lt;p&gt;我们知道电容可以储备电子，那么在电路中又该如何储备 &lt;code&gt;bit&lt;/code&gt; 呢？&lt;/p&gt;


&lt;h2 class=&#34;relative group&#34;&gt;R-S Latch 
    &lt;div id=&#34;r-s-latch&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#r-s-latch&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; src=&#34;./static/i0.png&#34; alt=&#34;i0&#34; /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;R-S Latch 由两个相联的 &lt;code&gt;NAND Gate&lt;/code&gt; 组成，它的特性如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只能存储 1 bit 信息，该信息从 a 出输出.&lt;/li&gt;
&lt;li&gt;不能同时将 S, R 设置为 0，否则存储的 bit 处于不确定状态.&lt;/li&gt;
&lt;li&gt;当为 S 端输入 0 时，a 输出 1，我们称之为 &lt;code&gt;setting&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;当为 R 端输入 1 时，a 输出 0，我们成指为 &lt;code&gt;resetting&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;该电路非常简单，其真值表如下:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>数字系统</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part6-logic/number-system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part6-logic/number-system/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;如何使用 0, 1 表达数字? 
    &lt;div id=&#34;%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-0-1-%E8%A1%A8%E8%BE%BE%E6%95%B0%E5%AD%97&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8-0-1-%E8%A1%A8%E8%BE%BE%E6%95%B0%E5%AD%97&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;图灵机就是用 0, 1 来表达数字的，并且它的目的就是计算数字。二进制和十进制没有什么不同，唯一的差别就是我们更加熟悉十进制而以，我们可以使用与计算十进制的加法，减法，除法，乘法时一样的方式在
纸上计算二进制数字，尝试计算一下 &lt;code&gt;11b * 11b = ?&lt;/code&gt; 和 &lt;code&gt;01b / 11b = ?&lt;/code&gt;, 之后你会发现两者没有什么不同。&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>项目计划</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part1-intro/plan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part1-intro/plan/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;抽象 + 第一性原理 + 解构 
    &lt;div id=&#34;%E6%8A%BD%E8%B1%A1--%E7%AC%AC%E4%B8%80%E6%80%A7%E5%8E%9F%E7%90%86--%E8%A7%A3%E6%9E%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E6%8A%BD%E8%B1%A1--%E7%AC%AC%E4%B8%80%E6%80%A7%E5%8E%9F%E7%90%86--%E8%A7%A3%E6%9E%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;这个项目的内容规划本身也是非常的复杂的, 因为它的目的是掌握另一件本就复杂的事物!&lt;/p&gt;
&lt;p&gt;以下两张图从两个不同视角分解计算机, 我们可以有效的对其进行解构，并通过抽象进行封装。&lt;/p&gt;
&lt;p&gt;我目前对内容规划的想法就是, 首先尽可能掌握最基础的知识, 然后对掌握的知识进行抽象封装, 充当上一层的第一性公理系统. 然后不断循环，吸收知识, 产出内容.&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        loading=&#34;lazy&#34;
        srcset=&#34;
        /projects/toycomputer/part1-intro/plan/computer-struct_hu_98658fc591ea7dae.png 330w,
        /projects/toycomputer/part1-intro/plan/computer-struct_hu_10b4a12848e149d.png 660w,
        /projects/toycomputer/part1-intro/plan/computer-struct_hu_fd78c4e6b547fc57.png 1024w,
        /projects/toycomputer/part1-intro/plan/computer-struct_hu_a8a5e0f386d294ee.png 2x&#34;
        src=&#34;https://ivanioi.github.io/projects/toycomputer/part1-intro/plan/computer-struct_hu_10b4a12848e149d.png&#34;
        alt=&#34;computer-struct&#34;
      /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Decoder</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part6-logic/decoder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part6-logic/decoder/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;What is decoder? 
    &lt;div id=&#34;what-is-decoder&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#what-is-decoder&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; src=&#34;./static/i13.png&#34; alt=&#34;i13&#34; /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Type: Combinational Logic Circuits 
    &lt;div id=&#34;type-combinational-logic-circuits&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#type-combinational-logic-circuits&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Input: n Bit 
    &lt;div id=&#34;input-n-bit&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#input-n-bit&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Output: 2^n Bit 
    &lt;div id=&#34;output-2n-bit&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#output-2n-bit&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;function: 将 n bit 无符号二进制整数解析为一个 2^n bit 长的唯一标识. 
    &lt;div id=&#34;function-%E5%B0%86-n-bit-%E6%97%A0%E7%AC%A6%E5%8F%B7%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B4%E6%95%B0%E8%A7%A3%E6%9E%90%E4%B8%BA%E4%B8%80%E4%B8%AA-2n-bit-%E9%95%BF%E7%9A%84%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#function-%E5%B0%86-n-bit-%E6%97%A0%E7%AC%A6%E5%8F%B7%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B4%E6%95%B0%E8%A7%A3%E6%9E%90%E4%B8%BA%E4%B8%80%E4%B8%AA-2n-bit-%E9%95%BF%E7%9A%84%E5%94%AF%E4%B8%80%E6%A0%87%E8%AF%86&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h2 class=&#34;relative group&#34;&gt;Boolean Expression 
    &lt;div id=&#34;boolean-expression&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#boolean-expression&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Y0 = !A!B&lt;/code&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>晶体管</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part4-device/transistors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part4-device/transistors/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;晶体管是如果工作的？ 
    &lt;div id=&#34;%E6%99%B6%E4%BD%93%E7%AE%A1%E6%98%AF%E5%A6%82%E6%9E%9C%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E6%99%B6%E4%BD%93%E7%AE%A1%E6%98%AF%E5%A6%82%E6%9E%9C%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;J4oO7PT_nzQ&#34; playlabel=&#34;J4oO7PT_nzQ&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;



&lt;h2 class=&#34;relative group&#34;&gt;MOSFET 是如果工作的？ 
    &lt;div id=&#34;mosfet-%E6%98%AF%E5%A6%82%E6%9E%9C%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#mosfet-%E6%98%AF%E5%A6%82%E6%9E%9C%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;AwRJsze_9m4&#34; playlabel=&#34;AwRJsze_9m4&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;</description>
      
    </item>
    
    <item>
      <title>振荡器</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part5-circuits/oscillator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part5-circuits/oscillator/</guid>
      <description>&lt;lite-youtube videoid=&#34;aJAZHPqEUKU&#34; playlabel=&#34;aJAZHPqEUKU&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;

&lt;p&gt;
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; src=&#34;./static/i5.png&#34; alt=&#34;i5&#34; /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;我们把每一个 0-1 以及下一个 0-1 电压转变时刻之间的周期称之为 &lt;code&gt;ONE CLOCK CYCLE&lt;/code&gt;！&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Mux</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part6-logic/mux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part6-logic/mux/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;What is mux? 
    &lt;div id=&#34;what-is-mux&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#what-is-mux&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; src=&#34;./static/i14.png&#34; alt=&#34;i14&#34; /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Type: Combinational Logic Circuits 
    &lt;div id=&#34;type-combinational-logic-circuits&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#type-combinational-logic-circuits&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Input: n Bit Data Input, log2(n) bit Select Input 
    &lt;div id=&#34;input-n-bit-data-input-log2n-bit-select-input&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#input-n-bit-data-input-log2n-bit-select-input&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Output: 1 Bit 
    &lt;div id=&#34;output-1-bit&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#output-1-bit&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;function: 根据输入 S 选择输出 N Bit 输入中对应的某一个值. 
    &lt;div id=&#34;function-%E6%A0%B9%E6%8D%AE%E8%BE%93%E5%85%A5-s-%E9%80%89%E6%8B%A9%E8%BE%93%E5%87%BA-n-bit-%E8%BE%93%E5%85%A5%E4%B8%AD%E5%AF%B9%E5%BA%94%E7%9A%84%E6%9F%90%E4%B8%80%E4%B8%AA%E5%80%BC&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#function-%E6%A0%B9%E6%8D%AE%E8%BE%93%E5%85%A5-s-%E9%80%89%E6%8B%A9%E8%BE%93%E5%87%BA-n-bit-%E8%BE%93%E5%85%A5%E4%B8%AD%E5%AF%B9%E5%BA%94%E7%9A%84%E6%9F%90%E4%B8%80%E4%B8%AA%E5%80%BC&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h2 class=&#34;relative group&#34;&gt;Boolean Expression 
    &lt;div id=&#34;boolean-expression&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#boolean-expression&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Y = !S1!S2D0 + !S1S2D1 + S1!S2D2 + S1S2D3&lt;/code&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>PCB</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part5-circuits/pcb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part5-circuits/pcb/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;PCB是如何工作的？ 
    &lt;div id=&#34;pcb%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#pcb%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;YJr-kHy6STg&#34; playlabel=&#34;YJr-kHy6STg&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;

&lt;lite-youtube videoid=&#34;Ukc_kc5OAhw&#34; playlabel=&#34;Ukc_kc5OAhw&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;

&lt;lite-youtube videoid=&#34;Z2LgmIGE2nI&#34; playlabel=&#34;Z2LgmIGE2nI&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;



&lt;h2 class=&#34;relative group&#34;&gt;主板是如果工作的？ 
    &lt;div id=&#34;%E4%B8%BB%E6%9D%BF%E6%98%AF%E5%A6%82%E6%9E%9C%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%E4%B8%BB%E6%9D%BF%E6%98%AF%E5%A6%82%E6%9E%9C%E5%B7%A5%E4%BD%9C%E7%9A%84&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;lite-youtube videoid=&#34;zxGqGCtPxn4&#34; playlabel=&#34;zxGqGCtPxn4&#34; params=&#34;&#34;&gt;&lt;/lite-youtube&gt;</description>
      
    </item>
    
    <item>
      <title>Full Adder</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part6-logic/full-adder/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part6-logic/full-adder/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;What is full adder? 
    &lt;div id=&#34;what-is-full-adder&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#what-is-full-adder&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; src=&#34;./static/i17.png&#34; alt=&#34;i17&#34; /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; src=&#34;./static/i18.png&#34; alt=&#34;i18&#34; /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Type: Combinational Logic Circuits 
    &lt;div id=&#34;type-combinational-logic-circuits&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#type-combinational-logic-circuits&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Input: 1 bit A, 1 bit B, 1 bit C(carry) 
    &lt;div id=&#34;input-1-bit-a-1-bit-b-1-bit-ccarry&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#input-1-bit-a-1-bit-b-1-bit-ccarry&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Output: 1 bit sum, 1 bit carry 
    &lt;div id=&#34;output-1-bit-sum-1-bit-carry&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#output-1-bit-sum-1-bit-carry&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;function: 将 A,B,C 相加，输出结果和进位值 
    &lt;div id=&#34;function-%E5%B0%86-abc-%E7%9B%B8%E5%8A%A0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%92%8C%E8%BF%9B%E4%BD%8D%E5%80%BC&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#function-%E5%B0%86-abc-%E7%9B%B8%E5%8A%A0%E8%BE%93%E5%87%BA%E7%BB%93%E6%9E%9C%E5%92%8C%E8%BF%9B%E4%BD%8D%E5%80%BC&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h2 class=&#34;relative group&#34;&gt;Boolean Expression 
    &lt;div id=&#34;boolean-expression&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#boolean-expression&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;Y(sum) = A + B + C&lt;/code&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>PLA</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part6-logic/pla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part6-logic/pla/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;What is PLA(aka.Programmable Logic Array)? 
    &lt;div id=&#34;what-is-plaakaprogrammable-logic-array&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#what-is-plaakaprogrammable-logic-array&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; loading=&#34;lazy&#34; src=&#34;./static/i20.png&#34; alt=&#34;i20&#34; /&gt;
      
    &lt;/figure&gt;
&lt;/p&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Type: Combinational Logic Circuits 
    &lt;div id=&#34;type-combinational-logic-circuits&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#type-combinational-logic-circuits&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Input: n bit you want 
    &lt;div id=&#34;input-n-bit-you-want&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#input-n-bit-you-want&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;Output: n bit you want 
    &lt;div id=&#34;output-n-bit-you-want&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#output-n-bit-you-want&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;


&lt;h4 class=&#34;relative group&#34;&gt;function: 可用于实现任何布尔逻辑 
    &lt;div id=&#34;function-%E5%8F%AF%E7%94%A8%E4%BA%8E%E5%AE%9E%E7%8E%B0%E4%BB%BB%E4%BD%95%E5%B8%83%E5%B0%94%E9%80%BB%E8%BE%91&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#function-%E5%8F%AF%E7%94%A8%E4%BA%8E%E5%AE%9E%E7%8E%B0%E4%BB%BB%E4%BD%95%E5%B8%83%E5%B0%94%E9%80%BB%E8%BE%91&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;任何组合逻辑电路都能转变为一个真值表，而 PLA 可以用于编程任何满足我们期望的真值表的功能. 其分为两部分:&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>有限状态机</title>
      <link>https://ivanioi.github.io/projects/toycomputer/part6-logic/finite-state-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ivanioi.github.io/projects/toycomputer/part6-logic/finite-state-machine/</guid>
      <description>&lt;h2 class=&#34;relative group&#34;&gt;What is FSM? 
    &lt;div id=&#34;what-is-fsm&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
    
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#what-is-fsm&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;
    &lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;a finite number of states&lt;/li&gt;
&lt;li&gt;a finite number of external inputs&lt;/li&gt;
&lt;li&gt;a finite number of external outputs&lt;/li&gt;
&lt;li&gt;an explicit specification of all state transitions&lt;/li&gt;
&lt;li&gt;an explicit specification of what determines each external output value.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;比如下面这个例子:&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>
